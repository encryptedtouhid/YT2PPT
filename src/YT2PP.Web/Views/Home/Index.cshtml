@using YT2PP.Models
@model DataInputViewModel
@{
    ViewData["Title"] = "Home Page";
}


﻿<div class="container">
    <div class="row logomargintop">
        <div class="col-md-2">
        </div>
        <div class="col-md-8 text-center">
            <img src="img/banner.png" width="350" height="120" />
        </div>
        <div class="col-md-2">
        </div>
    </div>

    <div class="row justify-content-center mt-5">
        <div class="col-md-10 text-center">
            <form id="youtubeForm" name="youtubeForm">
                @Html.AntiForgeryToken()
                <h1 asp-for="DataInput" class="control-label">Convert Youtube Video to PowerPoint Free </h1>
                <div class="form-group" id="inputForm">                   
                    @Html.TextBoxFor(model => model.DataInput, new { @class = "form-control form-control-lg mt-3", placeholder = "Paste your YouTube link here", style = "font-size: 1.6rem;", id = "datainputText" })
                    <span asp-validation-for="DataInput" class="text-danger"></span>

                </div>
                <div class="form-group text-center" style="margin:1em;">
                    <button type="submit" class="btn btn-primary btn-lg" id="convertBtn">Convert</button>
                </div>

                <div class="form-group" id="outputForm">
                    <h3 asp-for="DataInput" class="control-label">Your Presentation is ready! </h3>                   
                    <span asp-validation-for="DataInput" class="text-danger"></span>
                    <div class="form-group text-center" style="margin:1em;">
                        <button type="button" class="btn btn-success btn-lg" id="downloadBtn">Download your file</button>
                    </div>

                </div>

               
            </form>
        </div>
    </div>
</div>
<script src="~/lib/jquery/dist/jquery.min.js" asp-append-version="true"></script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
    $(document).ready(function () {
        $('#outputForm').hide();
        $("#youtubeForm").submit(function (event) {
            event.preventDefault(); // Prevent the default form submission
            $.ajax({
                type: "POST",
                url: "/Home/Extract",
                data: $(this).serialize(),
                success: function (response) {
                    console.log('Success:', response);
                    if (response.isSuccess) {                       
                        if (response.isAvailableDownload) {
                            $('#datainputText').hide();
                            $('#convertBtn').hide();

                            $('#downloadBtn').attr('data-id', response.vId);
                            $('#outputForm').show();
                        }
                    }
                },
                error: function (xhr) {

                }

            });
        });


        $('#downloadBtn').click(function () {
            var dataId = $(this).data('id');
            // Redirect to download action with fileId as query parameter
            window.location.href = '@Url.Action("DownloadFile", "Home")?id=' + dataId;
        });


        // Function to convert base64 to Blob
        function base64ToBlob(base64, mime) {
            var byteCharacters = atob(base64);
            var byteNumbers = new Array(byteCharacters.length);
            for (var i = 0; i < byteCharacters.length; i++) {
                byteNumbers[i] = byteCharacters.charCodeAt(i);
            }
            var byteArray = new Uint8Array(byteNumbers);
            return new Blob([byteArray], { type: mime });
        }

    });
</script>